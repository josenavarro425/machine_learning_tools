{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNPZaoYoo5pN/GoTq5xOg4g"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":248,"metadata":{"id":"q9FnfDKojoJp","executionInfo":{"status":"ok","timestamp":1674281096249,"user_tz":480,"elapsed":240,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"outputs":[],"source":["import pandas as pd \n","from google.colab import drive \n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive \n","drive.mount('/content/gdrive/')"],"metadata":{"id":"ExUP-JMIj-CX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674281097528,"user_tz":480,"elapsed":1057,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"694a5a3c-281e-4473-e310-ded199ce5b98"},"execution_count":249,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive/; to attempt to forcibly remount, call drive.mount(\"/content/gdrive/\", force_remount=True).\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('/content/gdrive/MyDrive/Machine Learning Lab/insurance.csv')"],"metadata":{"id":"kt8_q8hvkDMI","executionInfo":{"status":"ok","timestamp":1674281097528,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":250,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"dD62fC9zjRa3","executionInfo":{"status":"ok","timestamp":1674281097528,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"dc8934e8-f2e0-4893-e1cb-ab79802474d9"},"execution_count":251,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-3c98ed4d-660c-4431-be8f-c208bead01ee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows Ã— 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c98ed4d-660c-4431-be8f-c208bead01ee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3c98ed4d-660c-4431-be8f-c208bead01ee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3c98ed4d-660c-4431-be8f-c208bead01ee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":251}]},{"cell_type":"code","source":["df.loc[df[\"sex\"] == \"female\",\"sex\"] = 1.\n","df.loc[df[\"sex\"] == \"male\",\"sex\"] = 0.\n","\n","# CONVERT smoker and region\n","#region and smoker \n","dummies=pd.get_dummies(df[['region','smoker']])\n","df = pd.concat([df, dummies], axis=1)"],"metadata":{"id":"sDnbh5x-zsDt","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"ko7O6MbiQwLO","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"15834e6a-7ff5-414a-ca29-7a1aff2277dc"},"execution_count":253,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age  sex     bmi  children smoker     region      charges  \\\n","0      19  1.0  27.900         0    yes  southwest  16884.92400   \n","1      18  0.0  33.770         1     no  southeast   1725.55230   \n","2      28  0.0  33.000         3     no  southeast   4449.46200   \n","3      33  0.0  22.705         0     no  northwest  21984.47061   \n","4      32  0.0  28.880         0     no  northwest   3866.85520   \n","...   ...  ...     ...       ...    ...        ...          ...   \n","1333   50  0.0  30.970         3     no  northwest  10600.54830   \n","1334   18  1.0  31.920         0     no  northeast   2205.98080   \n","1335   18  1.0  36.850         0     no  southeast   1629.83350   \n","1336   21  1.0  25.800         0     no  southwest   2007.94500   \n","1337   61  1.0  29.070         0    yes  northwest  29141.36030   \n","\n","      region_northeast  region_northwest  region_southeast  region_southwest  \\\n","0                    0                 0                 0                 1   \n","1                    0                 0                 1                 0   \n","2                    0                 0                 1                 0   \n","3                    0                 1                 0                 0   \n","4                    0                 1                 0                 0   \n","...                ...               ...               ...               ...   \n","1333                 0                 1                 0                 0   \n","1334                 1                 0                 0                 0   \n","1335                 0                 0                 1                 0   \n","1336                 0                 0                 0                 1   \n","1337                 0                 1                 0                 0   \n","\n","      smoker_no  smoker_yes  \n","0             0           1  \n","1             1           0  \n","2             1           0  \n","3             1           0  \n","4             1           0  \n","...         ...         ...  \n","1333          1           0  \n","1334          1           0  \n","1335          1           0  \n","1336          1           0  \n","1337          0           1  \n","\n","[1338 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-8a523a78-a809-4394-afe8-607502a9557d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>1.0</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>0.0</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>0.0</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>0.0</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>0.0</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>0.0</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>1.0</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>1.0</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>1.0</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>1.0</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows Ã— 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a523a78-a809-4394-afe8-607502a9557d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a523a78-a809-4394-afe8-607502a9557d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a523a78-a809-4394-afe8-607502a9557d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":253}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"cY0q7fjlzsjW","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":9,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":254,"outputs":[]},{"cell_type":"code","source":["#JEN \n","#grab the variables we care about \n","data_prep = df[['age', 'sex', 'bmi', 'children', 'smoker_yes', 'region_northeast', 'region_northwest', 'region_southeast']]\n","features = data_prep.columns\n","target_prep = df[['charges']]\n","\n","#cast into array\n","data = np.array(data_prep)\n","target = np.array(target_prep)"],"metadata":{"id":"DQ5_JtX3Lvuj","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":9,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":255,"outputs":[]},{"cell_type":"markdown","source":["# 2.) Split the data into 80/20, in/out sample"],"metadata":{"id":"Aa3i7Z4L0Kks"}},{"cell_type":"code","source":["cut = int((len(data) * .8) //1) # 700"],"metadata":{"id":"K8ONkSPt0LtH","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":9,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":256,"outputs":[]},{"cell_type":"code","source":["in_data = data[:cut]\n","out_data = data[cut:]\n","in_target = target[:cut]\n","out_target = target[cut:]"],"metadata":{"id":"seeF3OOo0NJw","executionInfo":{"status":"ok","timestamp":1674281097529,"user_tz":480,"elapsed":9,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":257,"outputs":[]},{"cell_type":"markdown","source":["# 3.) Normalize the Data"],"metadata":{"id":"yE5JLqlZ0PMC"}},{"cell_type":"code","source":["from sklearn import preprocessing"],"metadata":{"id":"Hxy0fuTN0QwV","executionInfo":{"status":"ok","timestamp":1674281097530,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":258,"outputs":[]},{"cell_type":"code","source":["scaler = preprocessing.StandardScaler().fit(in_data)\n","\n","in_data_scale = scaler.transform(in_data)\n","\n","out_data_scale = scaler.transform(out_data)"],"metadata":{"id":"KcSC-mGW0RV6","executionInfo":{"status":"ok","timestamp":1674281097530,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":259,"outputs":[]},{"cell_type":"markdown","source":["# 4.) Get lambda from Lasso cross validation"],"metadata":{"id":"1SjON61Y0Woi"}},{"cell_type":"code","source":["from sklearn.linear_model import LassoCV\n","modCV = LassoCV().fit(in_data_scale, in_target)\n","a = modCV.alpha_ #Optimized Lambda\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UP_RXIGS0YDD","executionInfo":{"status":"ok","timestamp":1674281097530,"user_tz":480,"elapsed":10,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"1fcd3b5c-cb7c-43d3-abb1-c81967a44732"},"execution_count":260,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_coordinate_descent.py:1571: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["133.34880015958146"]},"metadata":{},"execution_count":260}]},{"cell_type":"markdown","source":["# 5.) Run a lasso regression with that Lambda"],"metadata":{"id":"rKnQhPNg0aXf"}},{"cell_type":"code","source":["#Run Lasso\n","from sklearn.linear_model import Lasso\n","mod1 = Lasso(alpha = a).fit(in_data_scale, in_target)\n","mod1.predict(np.array(in_data_scale))\n","coef=mod1.coef_"],"metadata":{"id":"C804_gpv0fwN","executionInfo":{"status":"ok","timestamp":1674281097752,"user_tz":480,"elapsed":230,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}}},"execution_count":261,"outputs":[]},{"cell_type":"markdown","source":["# 6.) Visualize the coefficients "],"metadata":{"id":"Ixl3KhOD0gT4"}},{"cell_type":"code","source":["pd.Series(mod1.coef_, features).sort_values(ascending = True).plot(kind = \"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"eWPQbaIw0gcf","executionInfo":{"status":"ok","timestamp":1674281097752,"user_tz":480,"elapsed":4,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"cca38229-26df-4cb5-c7d2-0b3730b072ab"},"execution_count":262,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f6ba7a97c40>"]},"metadata":{},"execution_count":262},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# 7.) Interpret the coefficients"],"metadata":{"id":"wXJyae9i0gqn"}},{"cell_type":"markdown","source":["From the bar-chart above, we can see that insurance companies charge more to insure a person if they are a smoker followed by age and BMI."],"metadata":{"id":"_JVAhf0a7OWJ"}},{"cell_type":"markdown","source":["# 8.) Compare in and out of sample MSEâ€™s"],"metadata":{"id":"zMPImKvP0lPM"}},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","\n","# Training data\n","pred_train = mod1.predict(in_data)\n","mse_train = mean_squared_error(in_target, pred_train)\n","print('MSE training set', round(mse_train, 2))\n","\n","# Test data\n","pred = mod1.predict(out_data)\n","mse_test =mean_squared_error(out_target, pred)\n","print('MSE test set', round(mse_test, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XIc1IX9d0mBy","executionInfo":{"status":"ok","timestamp":1674281097752,"user_tz":480,"elapsed":3,"user":{"displayName":"JOSE NAVARRO","userId":"09203836220238377032"}},"outputId":"ed9e587a-057c-4fe3-a38a-79ba0bd56f23"},"execution_count":263,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE training set 42969374292.15\n","MSE test set 39917068769.17\n"]}]}]}
